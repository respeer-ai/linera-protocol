(function() {var type_impls = {
"linera_sdk":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteCollectionView%3CC,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#175-179\">source</a><a href=\"#impl-ByteCollectionView%3CC,+W%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, W&gt; <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    W: <a class=\"trait\" href=\"linera_sdk/views/trait.View.html\" title=\"trait linera_sdk::views::View\">View</a>&lt;C&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_entry_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#210\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.load_entry_mut\" class=\"fn\">load_entry_mut</a>(\n    &amp;mut self,\n    short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut W</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Loads a subview for the data at the given index in the collection. If an entry\nis absent then a default entry is added to the collection. The resulting view\ncan be modified.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>subview = view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>value = subview.get();\n  <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>value, String::default());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_entry_or_insert\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#231\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.load_entry_or_insert\" class=\"fn\">load_entry_or_insert</a>(\n    &amp;mut self,\n    short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;W</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Loads a subview for the data at the given index in the collection. If an entry\nis absent then a default entry is added to the collection. The resulting view\nis read-only.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>subview = view.load_entry_or_insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>value = subview.get();\n  <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>value, String::default());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_load_entry\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#257-260\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.try_load_entry\" class=\"fn\">try_load_entry</a>(\n    &amp;self,\n    short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_views/collection_view/struct.ReadGuardedView.html\" title=\"struct linera_views::collection_view::ReadGuardedView\">ReadGuardedView</a>&lt;'_, W&gt;&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Loads a subview for the data at the given index in the collection. If an entry\nis absent then <code>None</code> is returned. The resulting view cannot be modified.\nMay fail if one subview is already being visited.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  {\n    <span class=\"kw\">let </span>_subview = view.load_entry_or_insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  }\n  {\n    <span class=\"kw\">let </span>subview = view.try_load_entry(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap().unwrap();\n    <span class=\"kw\">let </span>value = subview.get();\n    <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>value, String::default());\n  }\n  <span class=\"macro\">assert!</span>(view.try_load_entry(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">2</span>]).<span class=\"kw\">await</span>.unwrap().is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_entry_to_default\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#312\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.reset_entry_to_default\" class=\"fn\">reset_entry_to_default</a>(\n    &amp;mut self,\n    short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Resets an entry to the default value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>subview = view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>value = subview.get_mut();\n  <span class=\"kw-2\">*</span>value = String::from(<span class=\"string\">&quot;Hello&quot;</span>);\n  view.reset_entry_to_default(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>subview = view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>value = subview.get_mut();\n  <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>value, String::default());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#334\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.contains_key\" class=\"fn\">contains_key</a>(&amp;self, short_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tests if the collection contains a specified key and returns a boolean.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  {\n    <span class=\"kw\">let </span>_subview = view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  }\n  <span class=\"macro\">assert!</span>(view.contains_key(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap());\n  <span class=\"macro\">assert!</span>(!view.contains_key(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>, <span class=\"number\">2</span>]).<span class=\"kw\">await</span>.unwrap());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_entry\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#365\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.remove_entry\" class=\"fn\">remove_entry</a>(&amp;mut self, short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Marks the entry as removed. If absent then nothing is done.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>subview = view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>value = subview.get_mut();\n  <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>value, String::default());\n  view.remove_entry(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]);\n  <span class=\"kw\">let </span>keys = view.keys().<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(keys.len(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extra\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#375\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.extra\" class=\"fn\">extra</a>(&amp;self) -&gt; &amp;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Extra\" title=\"type linera_views::common::Context::Extra\">Extra</a></h4></section></summary><div class=\"docblock\"><p>Gets the extra data.</p>\n</div></details></div></details>",0,"linera_sdk::views::ByteCollectionView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteCollectionView%3CC,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#419-423\">source</a><a href=\"#impl-ByteCollectionView%3CC,+W%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, W&gt; <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    W: <a class=\"trait\" href=\"linera_sdk/views/trait.View.html\" title=\"trait linera_sdk::views::View\">View</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each_key_while\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#446-448\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.for_each_key_while\" class=\"fn\">for_each_key_while</a>&lt;F&gt;(&amp;self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</span></h4></section></summary><div class=\"docblock\"><p>Applies a function f on each index (aka key). Keys are visited in the\nlexicographic order. If the function returns false, then the loop\nends prematurely.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">2</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>count = <span class=\"number\">0</span>;\n  view.for_each_key_while(|_key| {\n    count += <span class=\"number\">1</span>;\n    <span class=\"prelude-val\">Ok</span>(count &lt; <span class=\"number\">1</span>)\n  }).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(count, <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each_key\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#511-513\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.for_each_key\" class=\"fn\">for_each_key</a>&lt;F&gt;(&amp;self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</span></h4></section></summary><div class=\"docblock\"><p>Applies a function f on each index (aka key). Keys are visited in a\nlexicographic order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">2</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>count = <span class=\"number\">0</span>;\n  view.for_each_key(|_key| {\n    count += <span class=\"number\">1</span>;\n    <span class=\"prelude-val\">Ok</span>(())\n  }).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(count, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.keys\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#537\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/collection_view/struct.ByteCollectionView.html#tymethod.keys\" class=\"fn\">keys</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the list of keys in the collection. The order is lexicographic.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>view : ByteCollectionView&lt;<span class=\"kw\">_</span>, RegisterView&lt;<span class=\"kw\">_</span>,String&gt;&gt; = ByteCollectionView::load(context).<span class=\"kw\">await</span>.unwrap();\n  view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  view.load_entry_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">2</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"kw\">let </span>keys = view.keys().<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(keys, <span class=\"macro\">vec!</span>[<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">2</span>]]);</code></pre></div>\n</div></details></div></details>",0,"linera_sdk::views::ByteCollectionView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-View%3CC%3E-for-ByteCollectionView%3CC,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#86-90\">source</a><a href=\"#impl-View%3CC%3E-for-ByteCollectionView%3CC,+W%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, W&gt; <a class=\"trait\" href=\"linera_sdk/views/trait.View.html\" title=\"trait linera_sdk::views::View\">View</a>&lt;C&gt; for <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    W: <a class=\"trait\" href=\"linera_sdk/views/trait.View.html\" title=\"trait linera_sdk::views::View\">View</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#92\">source</a><a href=\"#method.context\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.context\" class=\"fn\">context</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;C</a></h4></section></summary><div class='docblock'>Obtains a mutable reference to the internal context.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#96\">source</a><a href=\"#method.load\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.load\" class=\"fn\">load</a>&lt;'async_trait&gt;(\n    context: C\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;: 'async_trait,</span></h4></section></summary><div class='docblock'>Creates a view or a subview.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rollback\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#104\">source</a><a href=\"#method.rollback\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.rollback\" class=\"fn\">rollback</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Discards all pending changes. After that <code>flush</code> should have no effect to storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#109\">source</a><a href=\"#method.flush\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self, batch: &amp;mut <a class=\"struct\" href=\"linera_views/batch/struct.Batch.html\" title=\"struct linera_views::batch::Batch\">Batch</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Persists changes to storage. This leaves the view still usable and is essentially neutral to the\nprogram running. Crash-resistant storage implementations are expected to accumulate the desired\nchanges in the <code>batch</code> variable first. If the view is dropped without calling <code>flush</code>, staged\nchanges are simply lost.\nThe returned boolean indicates whether the operation removes the view or not.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#141\">source</a><a href=\"#method.clear\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the view. That can be seen as resetting to default. If the clear is followed\nby a flush then all the relevant data is removed on the storage.</div></details></div></details>","View<C>","linera_sdk::views::ByteCollectionView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ByteCollectionView%3CC,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#46\">source</a><a href=\"#impl-Debug-for-ByteCollectionView%3CC,+W%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, W&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#46\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","linera_sdk::views::ByteCollectionView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashableView%3CC%3E-for-ByteCollectionView%3CC,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#549-553\">source</a><a href=\"#impl-HashableView%3CC%3E-for-ByteCollectionView%3CC,+W%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, W&gt; <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&lt;C&gt; for <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    W: <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" class=\"associatedtype\">Hasher</a> = <a class=\"struct\" href=\"digest/core_api/wrapper/struct.CoreWrapper.html\" title=\"struct digest::core_api::wrapper::CoreWrapper\">CoreWrapper</a>&lt;<a class=\"struct\" href=\"sha3/struct.Sha3_256Core.html\" title=\"struct sha3::Sha3_256Core\">Sha3_256Core</a>&gt;</h4></section></summary><div class='docblock'>How to compute hashes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#557\">source</a><a href=\"#method.hash_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash_mut\" class=\"fn\">hash_mut</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 mut self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt; as <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&lt;C&gt;&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" title=\"type linera_views::views::HashableView::Hasher\">Hasher</a> as <a class=\"trait\" href=\"linera_views/views/trait.Hasher.html\" title=\"trait linera_views::views::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.Hasher.html#associatedtype.Output\" title=\"type linera_views::views::Hasher::Output\">Output</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<span class=\"where fmt-newline\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;: 'async_trait,</span></h4></section></summary><div class='docblock'>Computes the hash of the values. <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#585\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash\" class=\"fn\">hash</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt; as <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&lt;C&gt;&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" title=\"type linera_views::views::HashableView::Hasher\">Hasher</a> as <a class=\"trait\" href=\"linera_views/views/trait.Hasher.html\" title=\"trait linera_views::views::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.Hasher.html#associatedtype.Output\" title=\"type linera_views::views::Hasher::Output\">Output</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<span class=\"where fmt-newline\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;: 'async_trait,</span></h4></section></summary><div class='docblock'>Computes the hash of the values. <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash\">Read more</a></div></details></div></details>","HashableView<C>","linera_sdk::views::ByteCollectionView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClonableView%3CC%3E-for-ByteCollectionView%3CC,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#147-151\">source</a><a href=\"#impl-ClonableView%3CC%3E-for-ByteCollectionView%3CC,+W%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, W&gt; <a class=\"trait\" href=\"linera_views/views/trait.ClonableView.html\" title=\"trait linera_views::views::ClonableView\">ClonableView</a>&lt;C&gt; for <a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    W: <a class=\"trait\" href=\"linera_views/views/trait.ClonableView.html\" title=\"trait linera_views::views::ClonableView\">ClonableView</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/collection_view.rs.html#153\">source</a><a href=\"#method.clone_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_views/views/trait.ClonableView.html#tymethod.clone_unchecked\" class=\"fn\">clone_unchecked</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_views/collection_view/struct.ByteCollectionView.html\" title=\"struct linera_views::collection_view::ByteCollectionView\">ByteCollectionView</a>&lt;C, W&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Creates a clone of this view, sharing the underlying storage context but prone to\ndata races which can corrupt the view state.</div></details></div></details>","ClonableView<C>","linera_sdk::views::ByteCollectionView"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()