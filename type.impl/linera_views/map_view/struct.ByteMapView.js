(function() {var type_impls = {
"linera_sdk":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#148-151\">source</a><a href=\"#impl-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#165\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;, value: V)</h4></section></summary><div class=\"docblock\"><p>Inserts or resets the value of a key of the map.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"macro\">assert_eq!</span>(map.keys().<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#181\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Removes a value. If absent then nothing is done.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], <span class=\"string\">&quot;Hello&quot;</span>);\n  map.remove(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_by_prefix\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#204\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.remove_by_prefix\" class=\"fn\">remove_by_prefix</a>(&amp;mut self, key_prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Removes a value. If absent then nothing is done.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Bonjour&quot;</span>));\n  map.remove_by_prefix(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>]);\n  <span class=\"macro\">assert!</span>(map.keys().<span class=\"kw\">await</span>.unwrap().is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extra\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#219\">source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.extra\" class=\"fn\">extra</a>(&amp;self) -&gt; &amp;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Extra\" title=\"type linera_views::common::Context::Extra\">Extra</a></h4></section></summary><div class=\"docblock\"><p>Obtains the extra data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#236\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.contains_key\" class=\"fn\">contains_key</a>(&amp;self, short_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the map contains a value for the specified key.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"macro\">assert!</span>(map.contains_key(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap());\n  <span class=\"macro\">assert!</span>(!map.contains_key(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>,<span class=\"number\">2</span>]).<span class=\"kw\">await</span>.unwrap());</code></pre></div>\n</div></details></div></details>",0,"linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#255-259\">source</a><a href=\"#impl-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#273\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, short_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Reads the value at the given position, if any.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"macro\">assert_eq!</span>(map.get(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap(), <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">&quot;Hello&quot;</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#318\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(\n    &amp;mut self,\n    short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut V</a>&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Obtains a mutable reference to a value at a given position if available.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"kw\">let </span>value = map.get_mut(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap().unwrap();\n  <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>value, String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"kw-2\">*</span>value = String::from(<span class=\"string\">&quot;Hola&quot;</span>);\n  <span class=\"macro\">assert_eq!</span>(map.get(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap(), <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">&quot;Hola&quot;</span>)));</code></pre></div>\n</div></details></div></details>",0,"linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#331-335\">source</a><a href=\"#impl-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each_key_while\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#359-361\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.for_each_key_while\" class=\"fn\">for_each_key_while</a>&lt;F&gt;(\n    &amp;self,\n    f: F,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</span></h4></section></summary><div class=\"docblock\"><p>Applies the function f on each index (aka key) which has the assigned prefix.\nKeys are visited in the lexicographic order. The shortened key is send to the\nfunction and if it returns false, then the loop exits</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Bonjour&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">3</span>], String::from(<span class=\"string\">&quot;Bonjour&quot;</span>));\n  <span class=\"kw\">let </span>prefix = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>];\n  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>count = <span class=\"number\">0</span>;\n  map.for_each_key_while(|_key| {\n    count += <span class=\"number\">1</span>;\n    <span class=\"prelude-val\">Ok</span>(count &lt; <span class=\"number\">3</span>)\n  }, prefix).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(count, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each_key\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#426-428\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.for_each_key\" class=\"fn\">for_each_key</a>&lt;F&gt;(\n    &amp;self,\n    f: F,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</span></h4></section></summary><div class=\"docblock\"><p>Applies the function f on each index (aka key) having the specified prefix.\nThe shortened keys are sent to the function f. Keys are visited in the\nlexicographic order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>count = <span class=\"number\">0</span>;\n  <span class=\"kw\">let </span>prefix = Vec::new();\n  map.for_each_key(|_key| {\n    count += <span class=\"number\">1</span>;\n    <span class=\"prelude-val\">Ok</span>(())\n  }, prefix).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(count, <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.keys\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#454\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.keys\" class=\"fn\">keys</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the list of keys of the map in lexicographic order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Bonjour&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Hallo&quot;</span>));\n  <span class=\"macro\">assert_eq!</span>(map.keys().<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">2</span>,<span class=\"number\">2</span>]]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.keys_by_prefix\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#483\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.keys_by_prefix\" class=\"fn\">keys_by_prefix</a>(\n    &amp;self,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the list of keys of the map having a specified prefix\nin lexicographic order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Bonjour&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">3</span>], String::from(<span class=\"string\">&quot;Hallo&quot;</span>));\n  <span class=\"macro\">assert_eq!</span>(map.keys_by_prefix(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">3</span>]]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#513\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.count\" class=\"fn\">count</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the number of keys of the map</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Bonjour&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Hallo&quot;</span>));\n  <span class=\"macro\">assert_eq!</span>(map.count().<span class=\"kw\">await</span>.unwrap(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each_key_value_while\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#550-556\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.for_each_key_value_while\" class=\"fn\">for_each_key_value_while</a>&lt;F&gt;(\n    &amp;self,\n    f: F,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</span></h4></section></summary><div class=\"docblock\"><p>Applies a function f on each index/value pair matching a prefix. Keys\nand values are visited in the lexicographic order. The shortened index\nis send to the function f and if it returns false then the loop ends\nprematurely</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Bonjour&quot;</span>));\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">3</span>], String::from(<span class=\"string\">&quot;Hallo&quot;</span>));\n  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>part_keys = Vec::new();\n  <span class=\"kw\">let </span>prefix = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>];\n  map.for_each_key_value_while(|key, _value| {\n    part_keys.push(key.to_vec());\n    <span class=\"prelude-val\">Ok</span>(part_keys.len() &lt; <span class=\"number\">2</span>)\n  }, prefix).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(part_keys.len(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each_key_value\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#628-630\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.for_each_key_value\" class=\"fn\">for_each_key_value</a>&lt;F&gt;(\n    &amp;self,\n    f: F,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>], &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</span></h4></section></summary><div class=\"docblock\"><p>Applies a function f on each key/value pair matching a prefix. The shortened\nkey and value are send to the function f. Keys and values are visited in the\nlexicographic order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>count = <span class=\"number\">0</span>;\n  <span class=\"kw\">let </span>prefix = Vec::new();\n  map.for_each_key_value(|_key, _value| {\n    count += <span class=\"number\">1</span>;\n    <span class=\"prelude-val\">Ok</span>(())\n  }, prefix).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(count, <span class=\"number\">1</span>);</code></pre></div>\n</div></details></div></details>",0,"linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#643-647\">source</a><a href=\"#impl-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_values_by_prefix\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#663-666\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.key_values_by_prefix\" class=\"fn\">key_values_by_prefix</a>(\n    &amp;self,\n    prefix: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;, V)&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the list of keys and values of the map matching a prefix\nin lexicographic order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"kw\">let </span>prefix = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>];\n  <span class=\"macro\">assert_eq!</span>(map.key_values_by_prefix(prefix).<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>))]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_values\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#695\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.key_values\" class=\"fn\">key_values</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;, V)&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the list of keys and values of the map in lexicographic order.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"macro\">assert_eq!</span>(map.key_values().<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">2</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>))]);</code></pre></div>\n</div></details></div></details>",0,"linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#700-704\">source</a><a href=\"#impl-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_or_default\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#723\">source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/map_view/struct.ByteMapView.html#tymethod.get_mut_or_default\" class=\"fn\">get_mut_or_default</a>(\n    &amp;mut self,\n    short_key: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut V</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Obtains a mutable reference to a value at a given position.\nDefault value if the index is missing.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>  <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = ByteMapView::load(context).<span class=\"kw\">await</span>.unwrap();\n  map.insert(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>], String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"macro\">assert_eq!</span>(map.get_mut_or_default(<span class=\"macro\">vec!</span>[<span class=\"number\">7</span>]).<span class=\"kw\">await</span>.unwrap(), <span class=\"string\">&quot;&quot;</span>);\n  <span class=\"kw\">let </span>value = map.get_mut_or_default(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap();\n  <span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>value, String::from(<span class=\"string\">&quot;Hello&quot;</span>));\n  <span class=\"kw-2\">*</span>value = String::from(<span class=\"string\">&quot;Hola&quot;</span>);\n  <span class=\"macro\">assert_eq!</span>(map.get(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>,<span class=\"number\">1</span>]).<span class=\"kw\">await</span>.unwrap(), <span class=\"prelude-val\">Some</span>(String::from(<span class=\"string\">&quot;Hola&quot;</span>)));</code></pre></div>\n</div></details></div></details>",0,"linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-View%3CC%3E-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#71-75\">source</a><a href=\"#impl-View%3CC%3E-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"linera_sdk/views/trait.View.html\" title=\"trait linera_sdk::views::View\">View</a>&lt;C&gt; for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#77\">source</a><a href=\"#method.context\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.context\" class=\"fn\">context</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;C</a></h4></section></summary><div class='docblock'>Obtains a mutable reference to the internal context.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#81\">source</a><a href=\"#method.load\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.load\" class=\"fn\">load</a>&lt;'async_trait&gt;(\n    context: C\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;: 'async_trait,</span></h4></section></summary><div class='docblock'>Creates a view or a subview.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rollback\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#90\">source</a><a href=\"#method.rollback\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.rollback\" class=\"fn\">rollback</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Discards all pending changes. After that <code>flush</code> should have no effect to storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#96\">source</a><a href=\"#method.flush\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self, batch: &amp;mut <a class=\"struct\" href=\"linera_views/batch/struct.Batch.html\" title=\"struct linera_views::batch::Batch\">Batch</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Persists changes to storage. This leaves the view still usable and is essentially neutral to the\nprogram running. Crash-resistant storage implementations are expected to accumulate the desired\nchanges in the <code>batch</code> variable first. If the view is dropped without calling <code>flush</code>, staged\nchanges are simply lost.\nThe returned boolean indicates whether the operation removes the view or not.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#125\">source</a><a href=\"#method.clear\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the view. That can be seen as resetting to default. If the clear is followed\nby a flush then all the relevant data is removed on the storage.</div></details></div></details>","View<C>","linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeName-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#222\">source</a><a href=\"#impl-TypeName-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"async_graphql/base/trait.TypeName.html\" title=\"trait async_graphql::base::TypeName\">TypeName</a> for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    V: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#223\">source</a><a href=\"#method.type_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.TypeName.html#tymethod.type_name\" class=\"fn\">type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a GraphQL type name.</div></details></div></details>","TypeName","linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#62\">source</a><a href=\"#impl-Debug-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#62\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashableView%3CC%3E-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#752-756\">source</a><a href=\"#impl-HashableView%3CC%3E-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&lt;C&gt; for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + 'static,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" class=\"associatedtype\">Hasher</a> = <a class=\"struct\" href=\"digest/core_api/wrapper/struct.CoreWrapper.html\" title=\"struct digest::core_api::wrapper::CoreWrapper\">CoreWrapper</a>&lt;<a class=\"struct\" href=\"sha3/struct.Sha3_256Core.html\" title=\"struct sha3::Sha3_256Core\">Sha3_256Core</a>&gt;</h4></section></summary><div class='docblock'>How to compute hashes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#760\">source</a><a href=\"#method.hash_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash_mut\" class=\"fn\">hash_mut</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 mut self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt; as <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&lt;C&gt;&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" title=\"type linera_views::views::HashableView::Hasher\">Hasher</a> as <a class=\"trait\" href=\"linera_views/views/trait.Hasher.html\" title=\"trait linera_views::views::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.Hasher.html#associatedtype.Output\" title=\"type linera_views::views::Hasher::Output\">Output</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<span class=\"where fmt-newline\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;: 'async_trait,</span></h4></section></summary><div class='docblock'>Computes the hash of the values. <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#764\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash\" class=\"fn\">hash</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt; as <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&lt;C&gt;&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" title=\"type linera_views::views::HashableView::Hasher\">Hasher</a> as <a class=\"trait\" href=\"linera_views/views/trait.Hasher.html\" title=\"trait linera_views::views::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.Hasher.html#associatedtype.Output\" title=\"type linera_views::views::Hasher::Output\">Output</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<span class=\"where fmt-newline\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;: 'async_trait,</span></h4></section></summary><div class='docblock'>Computes the hash of the values. <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash\">Read more</a></div></details></div></details>","HashableView<C>","linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClonableView%3CC%3E-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#132-136\">source</a><a href=\"#impl-ClonableView%3CC%3E-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"linera_views/views/trait.ClonableView.html\" title=\"trait linera_views::views::ClonableView\">ClonableView</a>&lt;C&gt; for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/map_view.rs.html#138\">source</a><a href=\"#method.clone_unchecked\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"linera_views/views/trait.ClonableView.html#tymethod.clone_unchecked\" class=\"fn\">clone_unchecked</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Creates a clone of this view, sharing the underlying storage context but prone to\ndata races which can corrupt the view state.</div></details></div></details>","ClonableView<C>","linera_sdk::views::ByteMapView"],["<section id=\"impl-ObjectType-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#impl-ObjectType-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"async_graphql/base/trait.ObjectType.html\" title=\"trait async_graphql::base::ObjectType\">ObjectType</a> for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    V: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,</span></h3></section>","ObjectType","linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContainerType-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#impl-ContainerType-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"async_graphql/resolver_utils/container/trait.ContainerType.html\" title=\"trait async_graphql::resolver_utils::container::ContainerType\">ContainerType</a> for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    V: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#method.resolve_field\" class=\"anchor\">ยง</a><h4 class=\"code-header\">async fn <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#tymethod.resolve_field\" class=\"fn\">resolve_field</a>(\n    &amp;self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'_, &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.Field.html\" title=\"struct async_graphql_parser::types::executable::Field\">Field</a>&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>&gt;, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;</h4></section></summary><div class='docblock'>Resolves a field value and outputs it as a json value\n<code>async_graphql::Value</code>. <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#tymethod.resolve_field\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_entity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#method.find_entity\" class=\"anchor\">ยง</a><h4 class=\"code-header\">async fn <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.find_entity\" class=\"fn\">find_entity</a>(\n    &amp;self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'_, &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.Field.html\" title=\"struct async_graphql_parser::types::executable::Field\">Field</a>&gt;&gt;,\n    params: &amp;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>&gt;, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;</h4></section></summary><div class='docblock'>Find the GraphQL entity with the given name from the parameter. <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.find_entity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_all_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/resolver_utils/container.rs.html#36-42\">source</a><a href=\"#method.collect_all_fields\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.collect_all_fields\" class=\"fn\">collect_all_fields</a>&lt;'a&gt;(\n    &amp;'a self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'a, &amp;'a <a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.SelectionSet.html\" title=\"struct async_graphql_parser::types::executable::SelectionSet\">SelectionSet</a>&gt;&gt;,\n    fields: &amp;mut <a class=\"struct\" href=\"async_graphql/resolver_utils/container/struct.Fields.html\" title=\"struct async_graphql::resolver_utils::container::Fields\">Fields</a>&lt;'a&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</span></h4></section></summary><div class='docblock'>Collect all the fields of the container that are queried in the\nselection set. <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.collect_all_fields\">Read more</a></div></details></div></details>","ContainerType","linera_sdk::views::ByteMapView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputType-for-ByteMapView%3CC,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#impl-OutputType-for-ByteMapView%3CC,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, V&gt; <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> for <a class=\"struct\" href=\"linera_views/map_view/struct.ByteMapView.html\" title=\"struct linera_views::map_view::ByteMapView\">ByteMapView</a>&lt;C, V&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    V: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"linera_views/common/trait.Context.html\" title=\"trait linera_views::common::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/common/trait.Context.html#associatedtype.Error\" title=\"type linera_views::common::Context::Error\">Error</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#method.type_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.type_name\" class=\"fn\">type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Type the name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#method.create_type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.create_type_info\" class=\"fn\">create_type_info</a>(registry: &amp;mut Registry) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Create type information in the registry and return qualified typename.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/graphql.rs.html#232\">source</a><a href=\"#method.resolve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">async fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.resolve\" class=\"fn\">resolve</a>(\n    &amp;self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'_, &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.SelectionSet.html\" title=\"struct async_graphql_parser::types::executable::SelectionSet\">SelectionSet</a>&gt;&gt;,\n    _field: &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.Field.html\" title=\"struct async_graphql_parser::types::executable::Field\">Field</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;</h4></section></summary><div class='docblock'>Resolve an output value to <code>async_graphql::Value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.qualified_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/base.rs.html#72\">source</a><a href=\"#method.qualified_type_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#method.qualified_type_name\" class=\"fn\">qualified_type_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Qualified typename.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.introspection_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/base.rs.html#80\">source</a><a href=\"#method.introspection_type_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#method.introspection_type_name\" class=\"fn\">introspection_type_name</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Introspection type name <a href=\"async_graphql/base/trait.OutputType.html#method.introspection_type_name\">Read more</a></div></details></div></details>","OutputType","linera_sdk::views::ByteMapView"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()